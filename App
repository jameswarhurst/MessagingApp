import sqlite3
from tkinter import *
from tkinter import ttk

# Create a connection to the database
conn = sqlite3.connect('secure_messaging_service.db')

# Create a cursor object to execute SQL queries
c = conn.cursor()

# Check if the tables exist, create them if not
c.execute("SELECT name FROM sqlite_master WHERE type='table' AND name='users'")
if not c.fetchone():
    c.execute('''CREATE TABLE users
                 (username TEXT PRIMARY KEY,
                 password TEXT)''')

c.execute("SELECT name FROM sqlite_master WHERE type='table' AND name='messages'")
if not c.fetchone():
    c.execute('''CREATE TABLE messages
                 (id INTEGER PRIMARY KEY AUTOINCREMENT,
                 sender TEXT,
                 receiver TEXT,
                 message TEXT,
                 timestamp DATETIME DEFAULT CURRENT_TIMESTAMP)''')

# Commit the changes and close the connection
conn.commit()
conn.close()

def welcomePage():
    window = Tk()
    wlclbl=Label(window, text="Welcome to your hompage", fg='black', font=("Helvetica", 20))
    wlclbl.place(x=70, y=20)

    btn=Button(window, text="Login", fg='black', command=login)
    btn.place(x=165, y=85)

    btn=Button(window, text="Sign up", fg='black',command=signup)
    btn.place(x=160, y=125)

    window.title('Homepage')
    window.geometry("400x300")
    window.mainloop()

def login():
    def login_button_click():
        user = usrfld.get()
        passw = pasfld.get()
        window.destroy()

        # Connect to the database and execute a query to check if the entered credentials are valid
        conn = sqlite3.connect('secure_messaging_service.db')
        c = conn.cursor()
        query = f"SELECT * FROM users WHERE username='{user}' AND password='{passw}'"
        c.execute(query)
        result = c.fetchone()

        # If the query returned a result, the login is successful
        if result:
            homepage(result[0])
        else:
            print("Wrong login")

        # Close the connection
        conn.close()
    window=Tk()

    btn=Button(window, text="Login", fg='black', command=login_button_click)
    btn.place(x=315, y=120)

    lbl=Label(window, text="Enter Your Username", fg='black', font=("Helvetica", 16))
    lbl.place(x=100, y=40)

    lbl1=Label(window, text="Enter Your Password", fg='black', font=("Helvetica", 16))
    lbl1.place(x=100, y=100)

    usrfld=Entry(window, bd=5)
    usrfld.place(x=100, y=65)

    pasfld=Entry(window, bd=5, show="*")
    pasfld.place(x=100, y=125)

    window.title('Login Page')
    window.geometry("400x300")
    window.mainloop()

def signup():
    def signup_button_click():
        newuser = usrfld.get()
        newuserpass = pasfld.get()
        window.destroy()

        # Connect to the database
        conn = sqlite3.connect('secure_messaging_service.db')
        c = conn.cursor()

        # Check if the user already exists in the database
        c.execute("SELECT * FROM users WHERE username=?", (newuser,))
        if c.fetchone() is not None:
            print("Username already exists")
            conn.close()
            return

        # If the user does not exist, insert the new user into the database
        c.execute("INSERT INTO users (username, password) VALUES (?, ?)", (newuser, newuserpass))
        conn.commit()
        conn.close()

        login()
        
    window = Tk()

    btn=Button(window, text="Sign Up", fg='black', command=signup_button_click)
    btn.place(x=300, y=125)

    lbl=Label(window, text="Enter A Username", fg='black', font=("Helvetica", 16))
    lbl.place(x=100, y=40)

    lbl1=Label(window, text="Enter A Password", fg='black', font=("Helvetica", 16))
    lbl1.place(x=100, y=100)

    usrfld=Entry(window, bd=5)
    usrfld.place(x=100, y=65)

    pasfld=Entry(window, bd=5, show="*")
    pasfld.place(x=100, y=125)

    window.title('Sign Up Page')
    window.geometry("400x300")
    window.mainloop()

def homepage(username):
    window = Tk()
    window.title('Messaging App')
    window.geometry("400x300")

    # Create a label to welcome the user
    welcome_label = Label(window, text=f"Welcome back, {username}!", font=("Helvetica", 20))
    welcome_label.pack(pady=20)

    # Create buttons to navigate to friends list and messages
    friends_button = Button(window, text="Friends List", font=("Helvetica", 14), command=go_to_friends_list)
    friends_button.pack(pady=10)

    messages_button = Button(window, text="Messages", font=("Helvetica", 14), command=go_to_messages)
    messages_button.pack(pady=10)

    window.mainloop()

def go_to_friends_list():
    # Code to navigate to the friends list page
    pass

def go_to_messages():
    # Code to navigate to the messages page
    pass

welcomePage()